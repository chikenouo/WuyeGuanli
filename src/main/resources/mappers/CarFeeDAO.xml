<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 如果不會自動抓就 上方window>preference>找到XML(WWD)>第一個打勾 -->
<!-- mapper 標籤: 用來定義操作資料庫方法的 SQL 語句 -->
<!-- namespace: 用來綁定特定 Dao 介面 -->

<mapper namespace="com.example.WuyeGuanli.dao.CarFeeDAO">


	<!-- id自己取名 ， type是路徑 -->
	<!-- resultMap 標籤: 用於欄位名稱與 DTO 屬性變數名稱間的映射(mapping)；一個 mapper 標籤可以有多個不同的 
		resultMap -->
	<!-- resultMap 標籤中的 id: 此 resultMap 的唯一標識 -->
	<!-- resultMap 標籤中的 type: 指定裝載資料用的 DTO -->
	<resultMap id="CarFeeMergerMoney"
		type="com.example.WuyeGuanli.dto.CarFee">
		<!-- id 標籤: 用來標示主鍵，用於主鍵欄位和變數名稱的映射 -->
		<!-- property: GetMoney 中的屬性變數名稱 -->
		<!-- column: 資料表的欄位名稱 -->
		<id property="parking" column="parking" />

		<!-- result 標籤: 用在一般欄位與 DTO 變數名稱的映射 -->
		<result property="parkingFee" column="parking_fee" />
		<result property="owner" column="owner" />
		<result property="paid" column="paid" />
		<result property="receiveMoneyAccount"
			column="receive_money_account" />
		<result property="receive" column="receive" />
		<result property="timeOfReceivingMoney"
			column="time_of_receiving_money" />
		<result property="sendMoneyAccount" column="send_money_account" />

	</resultMap>





	<!-- select 標籤中的 resultMap: select 的結果要映射哪個 resultMap 中 -->
	<!-- resultMap 後面的字串就是上面 resultMap 標籤中，id 後面的字串 -->
	<!--select id = DAO 方法名 -->
	<select id="carFeeMarger" resultMap="CarFeeMergerMoney">
		<!-- 查誰匯給'管理員'一年內多少錢 -->
		<!--合表 -->
		SELECT
		cf.parking,
		cf.parking_fee,
		cf.owner,
		cf.paid,
		gm.send_money_account,
		gm.receive_money_account,
		SUM(gm.receive) AS
		receive
		FROM
		car_fee AS cf
		LEFT JOIN
		get_money AS gm
		ON
		cf.owner =
		gm.send_money_account
		AND gm.receive_money_account = '102420484096'
		AND
		gm.time_of_receiving_money > CURDATE() - INTERVAL 365 DAY
		GROUP BY
		cf.parking,
		cf.parking_fee,
		cf.owner,
		cf.paid,
		gm.send_money_account,
		gm.receive_money_account
		ORDER BY parking ;


	</select>

	<!-- 獨立功能：更新車位費用支付狀態 - 根據匯款金額自動更新 -->
	<update id="updateCarFeePaidStatus">
		UPDATE car_fee cf
		JOIN (
		SELECT
		owner,
		SUM(parking_fee)
		AS total_parking_fee
		FROM car_fee
		GROUP BY owner
		) AS total_fees ON
		cf.owner = total_fees.owner
		SET cf.paid = CASE
		WHEN (SELECT
		COALESCE(SUM(gm.receive), 0)
		FROM get_money gm
		WHERE
		gm.send_money_account = cf.owner
		AND gm.receive_money_account =
		'102420484096'
		AND gm.time_of_receiving_money > CURDATE() - INTERVAL
		365 DAY)
		>= total_fees.total_parking_fee
		THEN 1
		ELSE 0
		END
		WHERE EXISTS (
		SELECT 1
		FROM get_money gm
		WHERE gm.send_money_account = cf.owner
		AND
		gm.receive_money_account = '102420484096'
		AND
		gm.time_of_receiving_money > CURDATE() - INTERVAL 365 DAY
		);
	</update>


	<insert id="insertOrUpdateCarFee"
		parameterType="com.example.WuyeGuanli.dto.CarFee">
		INSERT INTO car_fee (parking, parking_fee, owner, paid)
		VALUES (#{parking}, #{parkingFee}, #{owner}, #{paid})
		ON DUPLICATE KEY UPDATE
		parking_fee = #{parkingFee},
		owner = #{owner},
		paid = #{paid}
	</insert>

</mapper>